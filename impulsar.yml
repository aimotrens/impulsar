build:
  foreach: &platforms
    - GOOS: linux
      GOARCH: arm64
      EXE_SUFFIX: ""
    - GOOS: linux
      GOARCH: amd64
      EXE_SUFFIX: ""
    - GOOS: windows
      GOARCH: amd64
      EXE_SUFFIX: ".exe"
    - GOOS: windows
      GOARCH: arm64
      EXE_SUFFIX: ".exe"
  conditional:
    - if: ["env.os === 'windows'"]
      overwrite:
        script:pre:
          - New-Item -Type Directory -Force release
        script:
          - go build -o release/impulsar_${GOOS}_${GOARCH}${EXE_SUFFIX} -ldflags "-X `"main.impulsarVersion=${IMPULSAR_VERSION}`" ` -X `"main.compileDate=$((get-date).ToString('dd.MM.yyyy'))`""
    - if: ["env.os === 'linux'"]
      overwrite:
        script:pre:
          - mkdir -p release
        script:
          - go build -o release/impulsar_${GOOS}_${GOARCH}${EXE_SUFFIX} -ldflags "-X \"main.impulsarVersion=${IMPULSAR_VERSION}\" -X \"main.compileDate=$(date)\""
  script:
    - echo "Unknown Platform"
    - STOP

# ---

pack-release:
  foreach: *platforms
  script:
    - mkdir -p release/artifacts
    - |
      if [ "${GOOS}" = "windows" ]; then
        zip -r release/artifacts/impulsar_${GOOS}_${GOARCH}.zip release/impulsar_${GOOS}_${GOARCH}${EXE_SUFFIX}
      else
        tar cvfJ release/artifacts/impulsar_${GOOS}_${GOARCH}.tar.xz release/impulsar_${GOOS}_${GOARCH}${EXE_SUFFIX}
      fi

# ---

build-docker:
  script:
    - docker build --builder=multiarch --platform=linux/amd64,linux/arm64 -t ${IMAGE} --push .

# ---

install:
  jobs:
    - install-on-linux
    - install-on-windows

install-on-linux:
  if: ["env.os === 'linux'"]
  variables:
    IMPULSAR_VERSION: vX.X.X-dev
  script:
    - go install -ldflags "-X \"main.impulsarVersion=${IMPULSAR_VERSION}\" -X \"main.compileDate=$(date)\""

install-on-windows:
  if: ["env.os === 'windows'"]
  variables:
    IMPULSAR_VERSION: vX.X.X-dev
  script:
    - go install -ldflags "-X `"main.impulsarVersion=${IMPULSAR_VERSION}`" -X `"main.compileDate=$((get-date).ToString('dd.MM.yyyy'))`""

# ---

start-docs:
  workDir: docs-site
  script:
    - |
      docker run -d --name mkdocs-dev --rm -p 80:8000 -v "$(pwd):/src" debian:bookworm /bin/bash -c "
      apt-get update && apt-get install -y python3 pip
      pip install --break-system-packages mkdocs mkdocs[i18n] mkdocs-material mkdocs-markdownextradata-plugin
      cd /src
      mkdocs serve -a 0.0.0.0:8000"

stop-docs:
  script:
    - |
      docker stop mkdocs-dev
