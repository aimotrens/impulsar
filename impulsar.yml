build:
  jobs:
    - build-linux-amd64
    - build-linux-arm64
    - build-windows-amd64

.build-binary: &build-binary
  conditional:
    - if: ["env.os === 'windows'"]
      overwrite:
        script:
          - New-Item -Type Directory -Force bin
          - go build -o bin/impulsar_${GOOS}_${GOARCH}${EXE_SUFFIX} -ldflags "-X `"main.compileDate=$((get-date).ToLongDateString())`""
    - if: ["env.os === 'linux'"]
      overwrite:
        script:
          - mkdir -p bin
          - go build -o bin/impulsar_${GOOS}_${GOARCH}${EXE_SUFFIX} -ldflags "-X \"main.compileDate=$(date)\""
  script:
    - echo "Unknown Platform"
    - STOP

build-linux-amd64:
  <<: *build-binary
  variables:
    GOOS: linux
    GOARCH: amd64
    EXE_SUFFIX: ""

build-linux-arm64:
  <<: *build-binary
  variables:
    GOOS: linux
    GOARCH: arm64
    EXE_SUFFIX: ""

build-windows-amd64:
  <<: *build-binary
  variables:
    GOOS: windows
    GOARCH: amd64
    EXE_SUFFIX: ".exe"

# ---

build-docker:
  script:
    - docker build --builder=multiarch --platform=linux/amd64,linux/arm64 -t ${IMAGE} --push .

# ---

install:
  jobs:
    - install-on-linux
    - install-on-windows

install-on-linux:
  if: ["env.os === 'linux'"]
  script:
    - go install -ldflags "-X \"main.compileDate=$(date)\""

install-on-windows:
  if: ["env.os === 'windows'"]
  script:
    - go install -ldflags "-X `"main.compileDate=$((get-date).ToLongDateString())`""
