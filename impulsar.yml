test:
  script:
    - go test -v ./...

build:
  foreach: &platforms
    - GOOS: linux
      GOARCH: arm64
      EXE_SUFFIX: ""
    - GOOS: linux
      GOARCH: amd64
      EXE_SUFFIX: ""
    - GOOS: windows
      GOARCH: amd64
      EXE_SUFFIX: ".exe"
    - GOOS: windows
      GOARCH: arm64
      EXE_SUFFIX: ".exe"
  script:
    - |
      {{if eq .OS "windows"}}
        New-Item -Type Directory -Force release/{{.GOOS}}_{{.GOARCH}}
        go build -o release/{{.GOOS}}_{{.GOARCH}}/impulsar{{.EXE_SUFFIX}} -ldflags "-X `"main.impulsarVersion={{.IMPULSAR_VERSION}}`" ` -X `"main.compileDate=$(Get-Date +UFormat %s)`""
      {{else if eq .OS "linux"}}
        mkdir -p release/{{.GOOS}}_{{.GOARCH}}
        go build -o release/{{.GOOS}}_{{.GOARCH}}/impulsar{{.EXE_SUFFIX}} -ldflags "-X \"main.impulsarVersion={{.IMPULSAR_VERSION}}\" -X \"main.compileDate=$(date +%s)\""
      {{else}}
        echo "Unknown Platform"
        STOP
      {{end}}

# ---

pack-release:
  shell:
    type: bash
  foreach: *platforms
  script:pre:
    - mkdir -p release/artifacts
  script:
    - |
      cp ./LICENSE release/{{.GOOS}}_{{.GOARCH}}/
      cp README.md release/{{.GOOS}}_{{.GOARCH}}/
      {{if eq .GOOS "windows"}}
        zip -r -j release/artifacts/impulsar_{{.GOOS}}_{{.GOARCH}}.zip release/{{.GOOS}}_{{.GOARCH}}/
      {{else}}
        tar cvfJ release/artifacts/impulsar_{{.GOOS}}_{{.GOARCH}}.tar.xz -C release/{{.GOOS}}_{{.GOARCH}} impulsar LICENSE README.md
      {{end}}

# ---

build-docker:
  script:
    - docker build --builder=multiarch --platform=linux/amd64,linux/arm64 -t {{.IMAGE}} --push .

# ---

install:
  jobs:
    - install-on-linux
    - install-on-windows

install-on-linux:
  if:
    - OS: linux
  script:
    - go install -ldflags "-X \"main.compileDate=$(date +%s)\""

install-on-windows:
  if:
    - OS: windows
  script:
    - go install -ldflags "-X `"main.compileDate=$(Get-Date +UFormat %s)`""
